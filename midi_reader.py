from music21 import converter, instrument, note, chord
import glob
import logging
logging.getLogger().setLevel(logging.INFO)


class MIDIReader:
    def __init__(self, train_dir):
        self.midi_notes = []
        self.train_dir = train_dir

    def load_notes(self):
        for midi_file in glob.glob("{}/*.mid".format(self.train_dir)):
            logging.debug(midi_file)
            midi = converter.parse(midi_file)
            instruments = instrument.partitionByInstrument(midi)
            if instruments:
                notes_list = instruments.parts[0].recurse()
            else:
                notes_list = midi.flat.notes
        
        for _note in notes_list:
            if isinstance(_note, note.Note):
                self.midi_notes.append(str(_note.pitch))
            elif isinstance(_note, chord.Chord):
                self.midi_notes.append('.'.join(str(n) for n in _note.normalOrder))


    def save_midi_output(self, out, midi_out_file):
        offset = 0
        output_notes = []
        # create note and chord objects based on the values generated by the model
        for pattern in out:
            # pattern is a chord
            if ('.' in pattern) or pattern.isdigit():
                notes_in_chord = pattern.split('.')
                notes = []
                for current_note in notes_in_chord:
                    new_note = note.Note(int(current_note))
                    new_note.storedInstrument = instrument.Piano()
                    notes.append(new_note)
                new_chord = chord.Chord(notes)
                new_chord.offset = offset
                output_notes.append(new_chord)
            # pattern is a note
            else:
                new_note = note.Note(pattern)
                new_note.offset = offset
                new_note.storedInstrument = instrument.Piano()
                output_notes.append(new_note)
            # increase offset each iteration so that notes do not stack
            offset += 0.5
        midi_stream = stream.Stream(output_notes)
        try:
            midi_stream.write('midi', fp=midi_out_file)
        except:
            print("ERROR: Could not write to MIDI File.")
            

if __name__ == "__main__":
    noteacc = NoteAccumulator("data/train")
    noteacc.load_notes()
